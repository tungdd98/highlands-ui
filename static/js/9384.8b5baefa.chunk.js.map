{"version":3,"file":"static/js/9384.8b5baefa.chunk.js","mappings":"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","sources":["components/EditComponents/ContentWrapper.tsx","components/EditComponents/StickyHeader.tsx","components/FormElements/FormikTextField/FormikTextField.tsx","../node_modules/@mui/material/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@mui/material/internal/svg-icons/CheckBox.js","../node_modules/@mui/material/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@mui/material/Checkbox/checkboxClasses.js","../node_modules/@mui/material/Checkbox/Checkbox.js","components/FormElements/FormikCheckbox/FormikCheckbox.tsx","features/user/screens/admin/EditScreen/EditScreen.tsx"],"sourcesContent":["import React, { FC, memo } from \"react\";\n\nimport { Box, Paper } from \"@mui/material\";\n\ninterface ContentWrapperProps {\n  children: React.ReactNode;\n}\n\nconst ContentWrapper: FC<ContentWrapperProps> = ({ children }) => {\n  return (\n    <Box\n      component={Paper}\n      sx={theme => ({\n        maxWidth: theme.breakpoints.values.md,\n        width: \"100%\",\n        mx: \"auto\",\n        px: 3,\n        py: 3,\n        my: 5,\n      })}\n      elevation={3}\n    >\n      {children}\n    </Box>\n  );\n};\n\nexport default memo(ContentWrapper);\n","import React, { FC, memo } from \"react\";\n\nimport { Box, Paper, Button } from \"@mui/material\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\n\ninterface StickyHeaderProps {\n  linkBack: string;\n  isSubmitting: boolean;\n}\n\nconst StickyHeader: FC<StickyHeaderProps> = ({ linkBack, isSubmitting }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Box\n      component={Paper}\n      elevation={3}\n      sx={{ px: 2, position: \"sticky\", top: 0, zIndex: 9 }}\n    >\n      <Box\n        sx={theme => ({\n          maxWidth: theme.breakpoints.values.md,\n          width: \"100%\",\n          mx: \"auto\",\n          py: 1.25,\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        })}\n      >\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          component={Link}\n          to={linkBack}\n        >\n          {t(\"button.Back\", { ns: \"admin\" })}\n        </Button>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          type=\"submit\"\n          disabled={isSubmitting}\n        >\n          {t(\"button.Save changes\", { ns: \"admin\" })}\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(StickyHeader);\n","import React, { FC, memo } from \"react\";\n\nimport { TextField, TextFieldProps, Typography } from \"@mui/material\";\nimport { Field, useFormikContext } from \"formik\";\nimport { get } from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface FormikTextFieldProps extends Omit<TextFieldProps, \"name\"> {\n  name: string;\n  ns?: string;\n}\n\nconst FormikTextField: FC<FormikTextFieldProps> = ({\n  label,\n  id,\n  name,\n  variant = \"filled\",\n  ns = \"admin\",\n  placeholder,\n  ...props\n}) => {\n  const { t } = useTranslation();\n\n  const { errors, touched, values, handleBlur, handleChange } =\n    useFormikContext<unknown>();\n\n  const error = get(errors, name) && get(touched, name);\n  const errorText = get(errors, name);\n\n  return (\n    <>\n      {label && (\n        <Typography sx={{ mb: 1, fontWeight: \"fontWeightMedium\" }}>\n          <label htmlFor={id || name}>{t(`label.${label}`, { ns })}</label>\n        </Typography>\n      )}\n      <Field\n        {...props}\n        component={TextField}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        id={id || name}\n        name={name}\n        variant={variant}\n        error={!!error}\n        helperText={error && t(errorText, { ns })}\n        value={get(values, name)}\n        autoComplete=\"off\"\n        hiddenLabel\n        label=\"\"\n        placeholder={placeholder ? t(`placeholder.${placeholder}`, { ns }) : \"\"}\n      />\n    </>\n  );\n};\n\nexport default memo(FormikTextField);\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCheckboxUtilityClass(slot) {\n  return generateUtilityClass('MuiCheckbox', slot);\n}\nconst checkboxClasses = generateUtilityClasses('MuiCheckbox', ['root', 'checked', 'disabled', 'indeterminate', 'colorPrimary', 'colorSecondary']);\nexport default checkboxClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checkedIcon\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport checkboxClasses, { getCheckboxUtilityClass } from './checkboxClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    indeterminate,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', indeterminate && 'indeterminate', `color${capitalize(color)}`]\n  };\n  const composedClasses = composeClasses(slots, getCheckboxUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\nconst CheckboxRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiCheckbox',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.indeterminate && styles.indeterminate, ownerState.color !== 'default' && styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: theme.palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${checkboxClasses.checked}, &.${checkboxClasses.indeterminate}`]: {\n    color: theme.palette[ownerState.color].main\n  },\n  [`&.${checkboxClasses.disabled}`]: {\n    color: theme.palette.action.disabled\n  }\n}));\n\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(CheckBoxIcon, {});\n\nconst defaultIcon = /*#__PURE__*/_jsx(CheckBoxOutlineBlankIcon, {});\n\nconst defaultIndeterminateIcon = /*#__PURE__*/_jsx(IndeterminateCheckBoxIcon, {});\n\nconst Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(inProps, ref) {\n  var _icon$props$fontSize, _indeterminateIcon$pr;\n\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCheckbox'\n  });\n\n  const {\n    checkedIcon = defaultCheckedIcon,\n    color = 'primary',\n    icon: iconProp = defaultIcon,\n    indeterminate = false,\n    indeterminateIcon: indeterminateIconProp = defaultIndeterminateIcon,\n    inputProps,\n    size = 'medium'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const icon = indeterminate ? indeterminateIconProp : iconProp;\n  const indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n\n  const ownerState = _extends({}, props, {\n    color,\n    indeterminate,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CheckboxRoot, _extends({\n    type: \"checkbox\",\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_icon$props$fontSize = icon.props.fontSize) != null ? _icon$props$fontSize : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: (_indeterminateIcon$pr = indeterminateIcon.props.fontSize) != null ? _indeterminateIcon$pr : size\n    }),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    classes: classes\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   * @default <CheckBoxIcon />\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'primary'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <CheckBoxOutlineBlankIcon />\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the `input`.\n   * @default false\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   * @default <IndeterminateCheckBoxIcon />\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense checkbox styling.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Checkbox;","import React, { FC, memo } from \"react\";\n\nimport {\n  Checkbox,\n  CheckboxProps,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  FormHelperText,\n  FormLabel,\n  Typography,\n} from \"@mui/material\";\nimport { useFormikContext } from \"formik\";\nimport { get } from \"lodash\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CheckboxOptionProp extends CheckboxProps {\n  label: string;\n  value: string | number;\n}\n\ninterface FormikCheckboxProps {\n  options?: CheckboxOptionProp[];\n  name: string;\n  label?: string;\n  singleOption?: boolean;\n  ns?: string;\n}\n\nconst FormikCheckbox: FC<FormikCheckboxProps> = ({\n  options,\n  name,\n  label,\n  singleOption,\n  ns = \"admin\",\n  ...rest\n}) => {\n  const { t } = useTranslation();\n\n  const { handleChange, errors, touched, values } = useFormikContext<unknown>();\n\n  const error = get(errors, name) && get(touched, name);\n  const errorText = get(errors, name);\n  const value = get(values, name);\n\n  return singleOption ? (\n    <FormControlLabel\n      label={label || \"\"}\n      control={\n        <Checkbox\n          {...rest}\n          name={name}\n          onChange={handleChange}\n          value={value}\n          checked={!!value}\n        />\n      }\n    />\n  ) : (\n    <FormControl component=\"fieldset\" variant=\"standard\" error={!!error}>\n      {label && (\n        <FormLabel component=\"legend\">\n          <Typography sx={{ fontWeight: 600 }}>\n            {t(`label.${label}`, { ns })}\n          </Typography>\n        </FormLabel>\n      )}\n      <FormGroup>\n        {options?.map(option => (\n          <FormControlLabel\n            key={option.value}\n            control={\n              <Checkbox\n                {...rest}\n                name={name}\n                onChange={handleChange}\n                value={option.value}\n                checked={value?.includes(option.value)}\n              />\n            }\n            label={t(`label.${option.label}`, { ns }) as string}\n          />\n        ))}\n        {error && <FormHelperText error>{errorText}</FormHelperText>}\n      </FormGroup>\n    </FormControl>\n  );\n};\n\nexport default memo(FormikCheckbox);\n","import React, { FC, memo, useEffect, useState, useMemo } from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { Formik, Form, FormikHelpers } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport ContentWrapper from \"components/EditComponents/ContentWrapper\";\nimport StickyHeader from \"components/EditComponents/StickyHeader\";\nimport FormikCheckbox from \"components/FormElements/FormikCheckbox/FormikCheckbox\";\nimport FormikTextField from \"components/FormElements/FormikTextField/FormikTextField\";\nimport Loader from \"components/Loader/Loader\";\nimport { ModesScreenEnum } from \"constants/common.constants\";\nimport { MessagesEnum } from \"constants/message.constants\";\nimport {\n  UserPathsEnum,\n  editSchema,\n  editInitialValues,\n  convertResponseToFormData,\n  convertFormDataToRequestBody,\n  postUser,\n  getUserDetail,\n  putUser,\n  ROLE_OPTIONS,\n  UserFormData,\n} from \"features/user/user\";\nimport { handleErrorResponse } from \"helpers/forms/handle-error-response\";\nimport { displaySnackbar } from \"redux/snackbar.slice\";\nimport { useAppDispatch, useAppSelector } from \"redux/store\";\n\nconst EditScreen: FC = () => {\n  const { t } = useTranslation();\n  const dispatch = useAppDispatch();\n  const history = useHistory();\n  const { userDetail } = useAppSelector(state => state.user);\n  const { mode, userId } = useParams<{ mode: string; userId: string }>();\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const initialValues = useMemo(() => {\n    if (userId && userDetail) {\n      return convertResponseToFormData(userDetail);\n    }\n    return editInitialValues;\n  }, [userDetail, userId]);\n\n  const handleSubmit = (\n    values: UserFormData,\n    { setSubmitting }: FormikHelpers<UserFormData>\n  ) => {\n    const data = convertFormDataToRequestBody(values);\n    const action = userId\n      ? dispatch(\n          putUser({\n            data,\n            userId: Number(userId),\n          })\n        )\n      : dispatch(postUser(data));\n\n    action\n      .then(unwrapResult)\n      .then(() => {\n        dispatch(\n          displaySnackbar({\n            message: userId\n              ? MessagesEnum.UPDATE_SUCCESS\n              : MessagesEnum.CREATE_SUCCESS,\n          })\n        );\n        history.push(UserPathsEnum.LIST);\n      })\n      .catch(() => handleErrorResponse({ dispatch }))\n      .finally(() => setSubmitting(false));\n  };\n\n  useEffect(() => {\n    if (userId) {\n      dispatch(getUserDetail(Number(userId))).finally(() =>\n        setIsLoading(false)\n      );\n    } else {\n      setIsLoading(false);\n    }\n  }, [dispatch, userId]);\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={editSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <StickyHeader\n            linkBack={UserPathsEnum.LIST}\n            isSubmitting={isSubmitting}\n          />\n\n          <ContentWrapper>\n            <Box mb={3}>\n              <FormikTextField\n                name=\"email\"\n                label=\"Email\"\n                placeholder={t(\"placeholder.example@gmail.com\", {\n                  ns: \"admin\",\n                })}\n                fullWidth\n                disabled={mode !== ModesScreenEnum.CREATE}\n              />\n            </Box>\n\n            <Box mb={3}>\n              <FormikTextField\n                name=\"name\"\n                label=\"Name\"\n                placeholder={t(\"placeholder.example\", { ns: \"admin\" })}\n                fullWidth\n              />\n            </Box>\n\n            <FormikCheckbox label=\"Roles\" name=\"roles\" options={ROLE_OPTIONS} />\n          </ContentWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default memo(EditScreen);\n"],"names":["ContentWrapper","children","component","Paper","sx","theme","maxWidth","breakpoints","values","md","width","mx","px","py","my","elevation","memo","StickyHeader","linkBack","isSubmitting","t","useTranslation","position","top","zIndex","display","justifyContent","variant","color","Link","to","ns","type","disabled","FormikTextField","label","id","name","placeholder","props","useFormikContext","errors","touched","handleBlur","handleChange","error","get","errorText","mb","fontWeight","htmlFor","TextField","onChange","onBlur","helperText","value","autoComplete","hiddenLabel","createSvgIcon","_jsx","d","getCheckboxUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CheckboxRoot","styled","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","ownerState","root","indeterminate","capitalize","_extends","palette","text","secondary","disableRipple","backgroundColor","alpha","action","active","main","hoverOpacity","checkboxClasses","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","React","inProps","ref","_icon$props$fontSize","_indeterminateIcon$pr","useThemeProps","checkedIcon","icon","iconProp","indeterminateIcon","indeterminateIconProp","inputProps","size","other","_objectWithoutPropertiesLoose","classes","slots","composedClasses","composeClasses","useUtilityClasses","fontSize","FormikCheckbox","options","singleOption","rest","FormControlLabel","control","checked","FormControl","FormLabel","Typography","FormGroup","map","option","includes","FormHelperText","EditScreen","dispatch","useAppDispatch","history","useHistory","userDetail","useAppSelector","state","user","useParams","mode","userId","useState","isLoading","setIsLoading","initialValues","useMemo","convertResponseToFormData","editInitialValues","useEffect","getUserDetail","Number","finally","Loader","validationSchema","editSchema","onSubmit","setSubmitting","data","convertFormDataToRequestBody","putUser","postUser","then","unwrapResult","displaySnackbar","message","MessagesEnum","push","UserPathsEnum","catch","handleErrorResponse","Box","fullWidth","ModesScreenEnum","ROLE_OPTIONS"],"sourceRoot":""}