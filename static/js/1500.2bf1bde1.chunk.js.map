{"version":3,"file":"static/js/1500.2bf1bde1.chunk.js","mappings":"uVA4IA,UAnH+B,WAC7B,IAAMA,GAAUC,EAAAA,EAAAA,MAEVC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,KAAe,SAAAC,GAAK,OAAIA,EAAMF,WAA1CA,QAER,GAA8BG,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAY,mCAAG,WACnBC,EADmB,iFAEjBC,EAFiB,EAEjBA,gBAEED,EAAOE,qBAAqBC,MAJb,iCAKMC,EAAAA,EAAAA,GAAYJ,EAAOE,WALzB,QAKXG,EALW,UAOfL,EAAOE,UAAYG,GAPJ,YAUfL,EAAOM,mBAAmBH,MAVX,kCAWMC,EAAAA,EAAAA,GAAYJ,EAAOM,SAXzB,QAWXD,EAXW,UAafL,EAAOM,QAAUD,GAbF,QAiBfd,EADWE,GACFc,EAAAA,EAAAA,IAAiBP,IACjBQ,EAAAA,EAAAA,IAAgBR,IAE1BS,KAAKC,EAAAA,IACLD,MAAK,WACJpB,EAAQsB,KAAKC,EAAAA,GAAAA,WAEdC,OAAM,kBAAMC,EAAAA,EAAAA,GAAoB,CAAEvB,SAAAA,OAClCwB,SAAQ,kBAAMd,GAAc,MAzBZ,4CAAH,wDAgClB,OAJAe,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,OAAkBF,SAAQ,kBAAMjB,GAAW,QACnD,CAACP,IAEAM,GACK,SAAC,IAAD,KAIP,SAAC,KAAD,CACEqB,eAAeC,EAAAA,EAAAA,IAA0B1B,GACzC2B,SAAUrB,EAFZ,SAIG,gBAAGsB,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,YACE,SAAC,IAAD,CACEC,SAAUV,EAAAA,GAAAA,OACVS,aAAcA,KAGhB,UAAC,IAAD,YACE,SAAC,IAAD,CAAKE,GAAI,CAAEC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,KAAK,QACLC,MAAM,QACNC,YAAY,UACZC,WAAS,OAIb,SAAC,IAAD,CAAKL,GAAI,CAAEC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,KAAK,cACLC,MAAM,cACNC,YAAY,UACZE,WAAS,EACTD,WAAS,EACTE,KAAM,OAIV,SAAC,IAAD,CACEL,KAAK,UACLC,MAAM,UACNK,MAAO,IACPC,gBAAiBC,EAAAA,GAAAA,cAGnB,SAAC,IAAD,CACER,KAAK,YACLC,MAAM,YACNK,MAAO,IACPC,gBAAiBC,EAAAA,GAAAA,cAGnB,SAAC,IAAD,CAAKV,GAAI,CAAEC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,KAAK,UACLC,MAAM,UACNC,YAAY,UACZC,WAAS,EACTC,WAAS,EACTC,KAAM,OAIV,SAAC,IAAD,CACEL,KAAK,UACLC,MAAM,UACNC,YAAY,UACZC,WAAS","sources":["features/setting/screens/BasicSettingScreen/BasicSettingScreen.tsx"],"sourcesContent":["import React, { FC, useState, useEffect } from \"react\";\n\nimport { Box } from \"@mui/material\";\nimport { unwrapResult } from \"@reduxjs/toolkit\";\nimport { Form, Formik, FormikHelpers } from \"formik\";\nimport { useHistory } from \"react-router-dom\";\n\nimport ContentWrapper from \"components/EditComponents/ContentWrapper\";\nimport StickyHeader from \"components/EditComponents/StickyHeader\";\nimport FormikTextField from \"components/FormElements/FormikTextField/FormikTextField\";\nimport Loader from \"components/Loader/Loader\";\nimport UploadImage from \"components/UploadImage/UploadImage\";\nimport { AspectRatioEnum } from \"constants/common.constants\";\nimport {\n  getSettingPage,\n  postSettingPage,\n  patchSettingPage,\n  SettingPathsEnum,\n  BasicSettingForm,\n  setInitValuesBasicSetting,\n} from \"features/setting/setting\";\nimport { handleErrorResponse } from \"helpers/forms/handle-error-response\";\nimport { uploadImage } from \"helpers/forms/upload-image\";\nimport { useAppDispatch, useAppSelector } from \"redux/store\";\n\nconst BasicSettingScreen: FC = () => {\n  const history = useHistory();\n\n  const dispatch = useAppDispatch();\n  const { setting } = useAppSelector(state => state.setting);\n\n  const [loading, setLoading] = useState(true);\n\n  const handleSubmit = async (\n    values: BasicSettingForm,\n    { setSubmitting }: FormikHelpers<BasicSettingForm>\n  ) => {\n    if (values.thumbnail instanceof File) {\n      const response = await uploadImage(values.thumbnail);\n      if (response) {\n        values.thumbnail = response;\n      }\n    }\n    if (values.favicon instanceof File) {\n      const response = await uploadImage(values.favicon);\n      if (response) {\n        values.favicon = response;\n      }\n    }\n    const action = setting\n      ? dispatch(patchSettingPage(values))\n      : dispatch(postSettingPage(values));\n    action\n      .then(unwrapResult)\n      .then(() => {\n        history.push(SettingPathsEnum.DETAIL);\n      })\n      .catch(() => handleErrorResponse({ dispatch }))\n      .finally(() => setSubmitting(false));\n  };\n\n  useEffect(() => {\n    dispatch(getSettingPage()).finally(() => setLoading(false));\n  }, [dispatch]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <Formik\n      initialValues={setInitValuesBasicSetting(setting)}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <StickyHeader\n            linkBack={SettingPathsEnum.DETAIL}\n            isSubmitting={isSubmitting}\n          />\n\n          <ContentWrapper>\n            <Box sx={{ mb: 3 }}>\n              <FormikTextField\n                name=\"title\"\n                label=\"Title\"\n                placeholder=\"example\"\n                fullWidth\n              />\n            </Box>\n\n            <Box sx={{ mb: 3 }}>\n              <FormikTextField\n                name=\"description\"\n                label=\"Description\"\n                placeholder=\"example\"\n                multiline\n                fullWidth\n                rows={5}\n              />\n            </Box>\n\n            <UploadImage\n              name=\"favicon\"\n              label=\"Favicon\"\n              width={150}\n              cropAspectRatio={AspectRatioEnum.ONE_TO_ONE}\n            />\n\n            <UploadImage\n              name=\"thumbnail\"\n              label=\"Thumbnail\"\n              width={200}\n              cropAspectRatio={AspectRatioEnum.ONE_TO_ONE}\n            />\n\n            <Box sx={{ mb: 3 }}>\n              <FormikTextField\n                name=\"address\"\n                label=\"Address\"\n                placeholder=\"example\"\n                fullWidth\n                multiline\n                rows={5}\n              />\n            </Box>\n\n            <FormikTextField\n              name=\"hotline\"\n              label=\"Hotline\"\n              placeholder=\"example\"\n              fullWidth\n            />\n          </ContentWrapper>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default BasicSettingScreen;\n"],"names":["history","useHistory","dispatch","useAppDispatch","setting","useAppSelector","state","useState","loading","setLoading","handleSubmit","values","setSubmitting","thumbnail","File","uploadImage","response","favicon","patchSettingPage","postSettingPage","then","unwrapResult","push","SettingPathsEnum","catch","handleErrorResponse","finally","useEffect","getSettingPage","initialValues","setInitValuesBasicSetting","onSubmit","isSubmitting","linkBack","sx","mb","name","label","placeholder","fullWidth","multiline","rows","width","cropAspectRatio","AspectRatioEnum"],"sourceRoot":""}