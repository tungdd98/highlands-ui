{"version":3,"file":"static/js/1729.eb002875.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/Dialog/dialogClasses.js","../node_modules/@mui/material/Dialog/Dialog.js","../node_modules/@mui/material/Dialog/DialogContext.js","../node_modules/@mui/material/DialogContent/dialogContentClasses.js","../node_modules/@mui/material/DialogContent/DialogContent.js","../node_modules/@mui/material/DialogTitle/DialogTitle.js","../node_modules/@mui/material/DialogTitle/dialogTitleClasses.js"],"sourcesContent":["import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiDialog', slot);\n}\nconst dialogClasses = generateUtilityClasses('MuiDialog', ['root', 'scrollPaper', 'scrollBody', 'container', 'paper', 'paperScrollPaper', 'paperScrollBody', 'paperWidthFalse', 'paperWidthXs', 'paperWidthSm', 'paperWidthMd', 'paperWidthLg', 'paperWidthXl', 'paperFullWidth', 'paperFullScreen']);\nexport default dialogClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_useId as useId } from '@mui/utils';\nimport capitalize from '../utils/capitalize';\nimport Modal from '../Modal';\nimport Fade from '../Fade';\nimport { duration } from '../styles/createTransitions';\nimport Paper from '../Paper';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport dialogClasses, { getDialogUtilityClass } from './dialogClasses';\nimport DialogContext from './DialogContext';\nimport Backdrop from '../Backdrop';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DialogBackdrop = styled(Backdrop, {\n  name: 'MuiDialog',\n  slot: 'Backdrop',\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    container: ['container', `scroll${capitalize(scroll)}`],\n    paper: ['paper', `paperScroll${capitalize(scroll)}`, `paperWidth${capitalize(String(maxWidth))}`, fullWidth && 'paperFullWidth', fullScreen && 'paperFullScreen']\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\n\nconst DialogRoot = styled(Modal, {\n  name: 'MuiDialog',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  '@media print': {\n    // Use !important to override the Modal inline-style.\n    position: 'absolute !important'\n  }\n});\nconst DialogContainer = styled('div', {\n  name: 'MuiDialog',\n  slot: 'Container',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: '100%',\n  '@media print': {\n    height: 'auto'\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center'\n}, ownerState.scroll === 'body' && {\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  textAlign: 'center',\n  '&:after': {\n    content: '\"\"',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n    height: '100%',\n    width: '0'\n  }\n}));\nconst DialogPaper = styled(Paper, {\n  name: 'MuiDialog',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize(ownerState.scroll)}`], styles[`paperWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: 'relative',\n  overflowY: 'auto',\n  // Fix IE11 issue, to remove at some point.\n  '@media print': {\n    overflowY: 'visible',\n    boxShadow: 'none'\n  }\n}, ownerState.scroll === 'paper' && {\n  display: 'flex',\n  flexDirection: 'column',\n  maxHeight: 'calc(100% - 64px)'\n}, ownerState.scroll === 'body' && {\n  display: 'inline-block',\n  verticalAlign: 'middle',\n  textAlign: 'left' // 'initial' doesn't work on IE11\n\n}, !ownerState.maxWidth && {\n  maxWidth: 'calc(100% - 64px)'\n}, ownerState.maxWidth === 'xs' && {\n  maxWidth: theme.breakpoints.unit === 'px' ? Math.max(theme.breakpoints.values.xs, 444) : `${theme.breakpoints.values.xs}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.maxWidth !== 'xs' && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: 'calc(100% - 64px)'\n    }\n  }\n}, ownerState.fullWidth && {\n  width: 'calc(100% - 64px)'\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: '100%',\n  maxWidth: '100%',\n  height: '100%',\n  maxHeight: 'none',\n  borderRadius: 0,\n  [`&.${dialogClasses.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: '100%'\n  }\n}));\nconst defaultTransitionDuration = {\n  enter: duration.enteringScreen,\n  exit: duration.leavingScreen\n};\n/**\n * Dialogs are overlaid modal paper based components with a backdrop.\n */\n\nconst Dialog = /*#__PURE__*/React.forwardRef(function Dialog(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialog'\n  });\n\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-labelledby': ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = 'sm',\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper,\n    PaperProps = {},\n    scroll = 'paper',\n    TransitionComponent = Fade,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React.useRef();\n\n  const handleMouseDown = event => {\n    // We don't want to close the dialog when clicking the dialog content.\n    // Make sure the event starts and ends on the same DOM element.\n    backdropClick.current = event.target === event.currentTarget;\n  };\n\n  const handleBackdropClick = event => {\n    // Ignore the events not coming from the \"backdrop\".\n    if (!backdropClick.current) {\n      return;\n    }\n\n    backdropClick.current = null;\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return /*#__PURE__*/_jsx(DialogRoot, _extends({\n    className: clsx(classes.root, className),\n    BackdropProps: _extends({\n      transitionDuration,\n      as: BackdropComponent\n    }, BackdropProps),\n    closeAfterTransition: true,\n    BackdropComponent: DialogBackdrop,\n    disableEscapeKeyDown: disableEscapeKeyDown,\n    onClose: onClose,\n    open: open,\n    ref: ref,\n    onClick: handleBackdropClick,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: /*#__PURE__*/_jsx(DialogContainer, {\n        className: clsx(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState: ownerState,\n        children: /*#__PURE__*/_jsx(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx(classes.paper, PaperProps.className),\n          ownerState: ownerState,\n          children: /*#__PURE__*/_jsx(DialogContext.Provider, {\n            value: dialogContextValue,\n            children: children\n          })\n        }))\n      })\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Dialog.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  'aria-labelledby': PropTypes.string,\n\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * @ignore\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: PropTypes.bool,\n\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Paper`](/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: PropTypes.object,\n\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: PropTypes.oneOf(['body', 'paper']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default { enter: duration.enteringScreen, exit: duration.leavingScreen }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Dialog;","import { createContext } from 'react';\nconst DialogContext = /*#__PURE__*/createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  DialogContext.displayName = 'DialogContext';\n}\n\nexport default DialogContext;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogContentUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogContent', slot);\n}\nconst dialogContentClasses = generateUtilityClasses('MuiDialogContent', ['root', 'dividers']);\nexport default dialogContentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"dividers\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogContentUtilityClass } from './dialogContentClasses';\nimport dialogTitleClasses from '../DialogTitle/dialogTitleClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    dividers\n  } = ownerState;\n  const slots = {\n    root: ['root', dividers && 'dividers']\n  };\n  return composeClasses(slots, getDialogContentUtilityClass, classes);\n};\n\nconst DialogContentRoot = styled('div', {\n  name: 'MuiDialogContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.dividers && styles.dividers];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  flex: '1 1 auto',\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: 'touch',\n  overflowY: 'auto',\n  padding: '20px 24px'\n}, ownerState.dividers ? {\n  padding: '16px 24px',\n  borderTop: `1px solid ${theme.palette.divider}`,\n  borderBottom: `1px solid ${theme.palette.divider}`\n} : {\n  [`.${dialogTitleClasses.root} + &`]: {\n    paddingTop: 0\n  }\n}));\nconst DialogContent = /*#__PURE__*/React.forwardRef(function DialogContent(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogContent'\n  });\n\n  const {\n    className,\n    dividers = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    dividers\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DialogContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogContent.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display the top and bottom dividers.\n   * @default false\n   */\n  dividers: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogContent;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"id\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getDialogTitleUtilityClass } from './dialogTitleClasses';\nimport DialogContext from '../Dialog/DialogContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getDialogTitleUtilityClass, classes);\n};\n\nconst DialogTitleRoot = styled(Typography, {\n  name: 'MuiDialogTitle',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: '16px 24px',\n  flex: '0 0 auto'\n});\nconst DialogTitle = /*#__PURE__*/React.forwardRef(function DialogTitle(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiDialogTitle'\n  });\n\n  const {\n    className,\n    id: idProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  const {\n    titleId: id = idProp\n  } = React.useContext(DialogContext);\n  return /*#__PURE__*/_jsx(DialogTitleRoot, _extends({\n    component: \"h2\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    variant: \"h6\",\n    id: id\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? DialogTitle.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default DialogTitle;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getDialogTitleUtilityClass(slot) {\n  return generateUtilityClass('MuiDialogTitle', slot);\n}\nconst dialogTitleClasses = generateUtilityClasses('MuiDialogTitle', ['root']);\nexport default dialogTitleClasses;"],"names":["getDialogUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","DialogBackdrop","styled","Backdrop","name","overrides","props","styles","backdrop","zIndex","DialogRoot","Modal","overridesResolver","root","position","DialogContainer","ownerState","container","capitalize","scroll","_extends","height","outline","display","justifyContent","alignItems","overflowY","overflowX","textAlign","content","verticalAlign","width","DialogPaper","Paper","paper","String","maxWidth","fullWidth","paperFullWidth","fullScreen","paperFullScreen","theme","margin","boxShadow","flexDirection","maxHeight","breakpoints","unit","Math","max","values","xs","dialogClasses","down","borderRadius","defaultTransitionDuration","enter","duration","exit","React","inProps","ref","useThemeProps","ariaDescribedby","ariaLabelledbyProp","BackdropComponent","BackdropProps","children","className","disableEscapeKeyDown","onBackdropClick","onClose","open","PaperComponent","PaperProps","TransitionComponent","Fade","transitionDuration","TransitionProps","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","backdropClick","ariaLabelledby","useId","dialogContextValue","titleId","_jsx","clsx","as","closeAfterTransition","onClick","event","current","appear","in","timeout","role","onMouseDown","target","currentTarget","elevation","DialogContext","value","createContext","getDialogContentUtilityClass","DialogContentRoot","dividers","flex","WebkitOverflowScrolling","padding","borderTop","palette","divider","borderBottom","dialogTitleClasses","paddingTop","DialogTitleRoot","Typography","DialogTitle","idProp","id","getDialogTitleUtilityClass","component","variant"],"sourceRoot":""}